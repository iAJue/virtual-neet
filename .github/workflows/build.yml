# .github/workflows/build.yml

name: Build and Lint Virtual Neet

# 触发工作流的事件
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 步骤 1：检出代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 步骤 2：设置 Node.js 环境
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # 根据项目需求调整 Node.js 版本
          cache: 'npm'

      # 步骤 3：缓存 node_modules（可选，如果不使用 setup-node 的缓存功能）
      # - name: Cache node modules
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-

      # 步骤 4：安装依赖项
      - name: Install dependencies
        run: npm install

      # 步骤 5：运行 Lint 检查
      - name: Lint code
        run: npm run lint

      # 步骤 6：格式化代码
      - name: Format code
        run: npm run format

      # 步骤 7：构建项目
      - name: Build project
        run: npm run build

      # 可选步骤：上传构建产物（如果需要）
      # - name: Upload build artifacts
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: build
      #     path: path/to/build/output

      # 可选步骤：发布到 GitHub Pages 或其他部署平台
      # 例如，部署到 GitHub Pages：
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./build # 根据实际构建产物目录调整
